node:
  cluster: default
  id: biz-f-service
# 查看相关的envoy的配置信息
admin:
  access_log_path: /var/log/envoy/admin_access.log
  profile_path: /var/log/envoy/envoy.prof
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

dynamic_resources:
  ads_config:
    api_type: GRPC
    transport_api_version: V3
    grpc_services:
      - envoy_grpc:
          cluster_name: cluster_xds
  cds_config:
    resource_api_version: V3
    ads: {}
  lds_config:
    resource_api_version: V3
    ads: {}

static_resources:
  clusters:
    - name: cluster_xds
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      # 配置控制层地址
      type: STRICT_DNS
      load_assignment:
        cluster_name: cluster_xds
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      # address: 192.168.8.66
                      address: isc-envoy-control-service
                      port_value: 11000
    - name: cluster_local
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: cluster_local
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 18005
    - name: mysql_cluster
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: mysql_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: mysql-envoy
                      port_value: 10000
    - name: jaeger
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: jaeger
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: jaeger
                      port_value: 9411
    - name: zipkin
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: zipkin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: zipkin
                      port_value: 9411
    - name: data-collector
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: data-collector
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 192.168.10.236
                      port_value: 18080
  listeners:
    - name: listener_ingress
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 10000
      access_log:
        - name: envoy.access_loggers.file
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: /var/log/envoy/ingress.log
            log_format:
              # text_format: "\"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%REQ(X-LYFT-USER-ID)%\" \"%RESP(GRPC-STATUS)%\"\n"
              json_format:
                start_time: "[%START_TIME%]"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                protocol: "%PROTOCOL%"
                response_code: "%RESPONSE_CODE%"
                response_flags: "%RESPONSE_FLAGS%"
                bytes_received: "%BYTES_RECEIVED%"
                bytes_sent: "%BYTES_SENT%"
                duration: "%DURATION%"
                upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                request_id: "%REQ(X-REQUEST-ID)%"
                authority: "%REQ(:AUTHORITY)%"
                upstream_host: "%UPSTREAM_HOST%"
                response_code_details: "%RESPONSE_CODE_DETAILS%"
                route_name: "%ROUTE_NAME%"
                upstream_cluster: "%UPSTREAM_CLUSTER%"
                downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                dynamic_metadata: "%DYNAMIC_METADATA(envoy.filters.network.mysql_proxy)%"
                hostname: "%HOSTNAME%"
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                tracing:
                  provider:
                    name: envoy.tracers.zipkin
                    typed_config:
                      "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
                      collector_cluster: data-collector
                      collector_endpoint: "/api/v2/spans"
                      collector_endpoint_version: HTTP_JSON
                stat_prefix: http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      # "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /var/log/envoy/ingress_http.log
                      # "@type": type.googleapis.com/envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig
                      log_format:
                        json_format:
                          start_time: "[%START_TIME%]"
                          method: "%REQ(:METHOD)%"
                          path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                          protocol: "%PROTOCOL%"
                          response_code: "%RESPONSE_CODE%"
                          response_flags: "%RESPONSE_FLAGS%"
                          bytes_received: "%BYTES_RECEIVED%"
                          bytes_sent: "%BYTES_SENT%"
                          duration: "%DURATION%"
                          upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                          forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                          request_id: "%REQ(X-REQUEST-ID)%"
                          authority: "%REQ(:AUTHORITY)%"
                          upstream_host: "%UPSTREAM_HOST%"
                          response_code_details: "%RESPONSE_CODE_DETAILS%"
                          route_name: "%ROUTE_NAME%"
                          upstream_cluster: "%UPSTREAM_CLUSTER%"
                          downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                          dynamic_metadata: "%DYNAMIC_METADATA(envoy.filters.network.mysql_proxy)%"
                          hostname: "%HOSTNAME%"
                route_config:
                  # 配置流量的输入监听
                  name: route_local
                  virtual_hosts:
                    - name: route_local
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/api/f/"
                          route:
                            cluster: cluster_local
                          decorator:
                            operation: checkAvailability
                http_filters:
                  - name: envoy.filters.http.router
                generate_request_id: true






    # - name: egress_mysql
    #   address:
    #     socket_address:
    #       address: 0.0.0.0
    #       port_value: 3306
    #   access_log:
    #     - name: envoy.access_loggers.file
    #       typed_config:
    #         "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
    #         path: /var/log/envoy/egress_mysql.log
    #         log_format:
    #           # text_format: "\"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%REQ(X-LYFT-USER-ID)%\" \"%RESP(GRPC-STATUS)%\"\n"
    #           json_format:
    #             start_time: "[%START_TIME%]"
    #             method: "%REQ(:METHOD)%"
    #             path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
    #             protocol: "%PROTOCOL%"
    #             response_code: "%RESPONSE_CODE%"
    #             response_flags: "%RESPONSE_FLAGS%"
    #             bytes_received: "%BYTES_RECEIVED%"
    #             bytes_sent: "%BYTES_SENT%"
    #             duration: "%DURATION%"
    #             upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
    #             forwarded_for: "%REQ(X-FORWARDED-FOR)%"
    #             request_id: "%REQ(X-REQUEST-ID)%"
    #             authority: "%REQ(:AUTHORITY)%"
    #             upstream_host: "%UPSTREAM_HOST%"
    #             response_code_details: "%RESPONSE_CODE_DETAILS%"
    #             route_name: "%ROUTE_NAME%"
    #             upstream_cluster: "%UPSTREAM_CLUSTER%"
    #             downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
    #             dynamic_metadata: "%DYNAMIC_METADATA(com)%"
    #             hostname: "%HOSTNAME%"
    #   filter_chains:
    #     - filters:
    #       - name: envoy.filters.network.mysql_proxy
    #         typed_config:
    #           "@type": type.googleapis.com/envoy.extensions.filters.network.mysql_proxy.v3.MySQLProxy
    #           stat_prefix: mysql
    #           access_log: /var/log/envoy/access_mysql.log
    #       - name: envoy.filters.network.rbac
    #         typed_config:
    #           "@type": type.googleapis.com/envoy.extensions.filters.network.rbac.v3.RBAC
    #           stat_prefix: rbac
    #           rules:
    #             action: LOG
    #             policies:
    #               "product-viewer":
    #                 permissions:
    #                 - metadata:
    #                     filter: envoy.filters.network.mysql_proxy
    #                     path:
    #                     - key: service_update.biz_envoy
    #                     value:
    #                       list_match:
    #                         one_of:
    #                           string_match:
    #                             exact: ^((insert)|(INSERT)|(update)|(UPDATE)|(delete)|(DELETE)|(select)|(SELECT)|(show)|(SHOW)|(create)|(CREATE))$
    #                 principals:
    #                 - any: true
    #       - name: envoy.filters.network.tcp_proxy
    #         typed_config:
    #           "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
    #           stat_prefix: tcp
    #           cluster: mysql_cluster
